name: Upload React App

# on:
#   # push:
#   #   branches: [ "main" ]
    
jobs:
  build:

    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    # - name: Use Node.js 
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18'
    #     cache: 'npm'

    # - name: Install dependecies and build app
    #   run: |
    #     cd cvsite
    #     npm install
    #     npm run build --if-present

    - name: Configure AWS Credentials Action for GitHub Actions
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_TEST_ACCOUNT_ID }}:role/OpenID-Role-xlyalbnhz58Y
        aws-region: eu-west-1

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    - name: Generate Terraform Variables File
      run: |
        cat <<EOF > cvsite/terraform.tfvars
        domain_name = "${{ secrets.AWS_BUCKET_NAME }}"
        bucket_name = "${{ secrets.AWS_BUCKET_NAME }}"
        bucket_list = {
            bucket1 = "${{ secrets.AWS_BUCKET_NAME }}",
            bucket2 = "www.${{ secrets.AWS_BUCKET_NAME }}"
        }
        main_bucket_key = "bucket1"
        aws_test_account_id = "${{ secrets.AWS_TEST_ACCOUNT_ID }}"
        EOF

    - name: Get OIDC Token      
      id: get_oidc_token
      run: |
        curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq -r '.value' > /tmp/web_identity_token_file
    
    - name: Initialize, plan, and apply Terraform
      run: |
        cd cvsite
        terraform init
        terraform plan -var-file=terraform.tfvars
        terraform apply -var-file=terraform.tfvars -auto-approve

    # - name: Plan Terraform Changes
    #   run: 

    # - name: Apply Terraform Confirguration
    #   run: 

    - name: Upload to S3
      run: aws s3 cp cvsite/build s3://${{ secrets.AWS_BUCKET_NAME }} --recursive
